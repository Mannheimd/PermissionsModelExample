/*
Deployment script for PermissionsTest

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "PermissionsTest"
:setvar DefaultFilePrefix "PermissionsTest"
:setvar DefaultDataPath "C:\Users\chris.manders\AppData\Local\Microsoft\VisualStudio\SSDT\"
:setvar DefaultLogPath "C:\Users\chris.manders\AppData\Local\Microsoft\VisualStudio\SSDT\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The type for column Id in table [dbo].[Claims] is currently  INT NOT NULL but is being changed to  UNIQUEIDENTIFIER NOT NULL. There is no implicit or explicit conversion.
*/

IF EXISTS (select top 1 1 from [dbo].[Claims])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column Id in table [dbo].[Groups] is currently  INT NOT NULL but is being changed to  UNIQUEIDENTIFIER NOT NULL. There is no implicit or explicit conversion.

The type for column RoleId in table [dbo].[Groups] is currently  INT NOT NULL but is being changed to  UNIQUEIDENTIFIER NOT NULL. There is no implicit or explicit conversion.
*/

IF EXISTS (select top 1 1 from [dbo].[Groups])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column AllowsClaim in table [dbo].[Roles] is currently  INT NOT NULL but is being changed to  UNIQUEIDENTIFIER NOT NULL. There is no implicit or explicit conversion.

The type for column Id in table [dbo].[Roles] is currently  INT NOT NULL but is being changed to  UNIQUEIDENTIFIER NOT NULL. There is no implicit or explicit conversion.
*/

IF EXISTS (select top 1 1 from [dbo].[Roles])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column Id in table [dbo].[UserRoleAssignments] is currently  INT NOT NULL but is being changed to  UNIQUEIDENTIFIER NOT NULL. There is no implicit or explicit conversion.

The type for column RoleId in table [dbo].[UserRoleAssignments] is currently  INT NOT NULL but is being changed to  UNIQUEIDENTIFIER NOT NULL. There is no implicit or explicit conversion.
*/

IF EXISTS (select top 1 1 from [dbo].[UserRoleAssignments])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping [dbo].[FK_RoleClaim]...';


GO
ALTER TABLE [dbo].[Roles] DROP CONSTRAINT [FK_RoleClaim];


GO
PRINT N'Dropping [dbo].[FK_GroupRole]...';


GO
ALTER TABLE [dbo].[Groups] DROP CONSTRAINT [FK_GroupRole];


GO
PRINT N'Dropping [dbo].[FK_UserRole]...';


GO
ALTER TABLE [dbo].[UserRoleAssignments] DROP CONSTRAINT [FK_UserRole];


GO
PRINT N'Starting rebuilding table [dbo].[Claims]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Claims] (
    [Id]        UNIQUEIDENTIFIER DEFAULT NEWID() NOT NULL,
    [ClaimName] NVARCHAR (MAX)   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Claims])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Claims] ([Id], [ClaimName])
        SELECT   [Id],
                 [ClaimName]
        FROM     [dbo].[Claims]
        ORDER BY [Id] ASC;
    END

DROP TABLE [dbo].[Claims];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Claims]', N'Claims';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Groups]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Groups] (
    [Id]      UNIQUEIDENTIFIER DEFAULT NEWID() NOT NULL,
    [GroupId] NVARCHAR (MAX)   NOT NULL,
    [RoleId]  UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Groups])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Groups] ([Id], [GroupId], [RoleId])
        SELECT   [Id],
                 [GroupId],
                 [RoleId]
        FROM     [dbo].[Groups]
        ORDER BY [Id] ASC;
    END

DROP TABLE [dbo].[Groups];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Groups]', N'Groups';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Roles]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Roles] (
    [Id]          UNIQUEIDENTIFIER DEFAULT NEWID() NOT NULL,
    [RoleName]    NVARCHAR (MAX)   NOT NULL,
    [AllowsClaim] UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Roles])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Roles] ([Id], [RoleName], [AllowsClaim])
        SELECT   [Id],
                 [RoleName],
                 [AllowsClaim]
        FROM     [dbo].[Roles]
        ORDER BY [Id] ASC;
    END

DROP TABLE [dbo].[Roles];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Roles]', N'Roles';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[UserRoleAssignments]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserRoleAssignments] (
    [Id]       UNIQUEIDENTIFIER DEFAULT NEWID() NOT NULL,
    [UserADId] NVARCHAR (MAX)   NOT NULL,
    [RoleId]   UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserRoleAssignments])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_UserRoleAssignments] ([Id], [UserADId], [RoleId])
        SELECT   [Id],
                 [UserADId],
                 [RoleId]
        FROM     [dbo].[UserRoleAssignments]
        ORDER BY [Id] ASC;
    END

DROP TABLE [dbo].[UserRoleAssignments];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserRoleAssignments]', N'UserRoleAssignments';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_RoleClaim]...';


GO
ALTER TABLE [dbo].[Roles] WITH NOCHECK
    ADD CONSTRAINT [FK_RoleClaim] FOREIGN KEY ([AllowsClaim]) REFERENCES [dbo].[Claims] ([Id]);


GO
PRINT N'Creating [dbo].[FK_GroupRole]...';


GO
ALTER TABLE [dbo].[Groups] WITH NOCHECK
    ADD CONSTRAINT [FK_GroupRole] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[Roles] ([Id]);


GO
PRINT N'Creating [dbo].[FK_UserRole]...';


GO
ALTER TABLE [dbo].[UserRoleAssignments] WITH NOCHECK
    ADD CONSTRAINT [FK_UserRole] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[Roles] ([Id]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Roles] WITH CHECK CHECK CONSTRAINT [FK_RoleClaim];

ALTER TABLE [dbo].[Groups] WITH CHECK CHECK CONSTRAINT [FK_GroupRole];

ALTER TABLE [dbo].[UserRoleAssignments] WITH CHECK CHECK CONSTRAINT [FK_UserRole];


GO
PRINT N'Update complete.';


GO
